这里谈一下捣鼓库函数的所得
参考：翁恺老师的浙大c语言课和Cprimer plus
计划：自拟函数，实现引用头文件即可链接执行
IDE：dev c++
头文件：include，在dev的编译选项中可以找到dev的标准目录，把头文件放在下面，即可实现对文件的include<>预处理
库函数：这里说的是静态库，同样可以在编译选项中找到系统标准目录的位置

ps：对于一个.c文件，经历预处理，编译，汇编，链接，执行等环节。
预处理：将预处理指令（#）在标准目录或当前工作目录寻找文件，进行内容替换，（include）
        直接进行文本替换（define）
        这里牵扯到重复包含文件的问题：可以ifdef和endif条件编译避免重复包含
        预处理后的文件依然是.c文件
编译：  将替换好的.c文件进行编译，形成汇编语言，在windows中形成.s文件
汇编：  将编译好的文件中的汇编语言，再转换成机器语言：一堆0101，形成windows下的.obj文件或者Linux下的.o文件
链接：  将目标文件与静态库文件链接，形成可执行文件，形成windows下的exe，或者Linux下的.out 文件
执行
从此可以看出，静态库文件是010的格式，是已经单独经过编译汇编好的文件，它采用coff文件格式，因此如果用txt写了一段c源程序，
并直接改后缀成.a，是不行的，同样道理，如果在dev中，直接写一段源代码（只写函数定义部分），然后编译，（过不了，报错，但.c文件已经形成），
然后改后缀成.a，也是不行的。？？但是直接按编译按钮也是经过编译汇编形成的010文件为什么不行？？因为在第一次出错的地方，就停止编译了，所以不完整

再说明：库文件分为动态库和静态库
       windows：.dll     .lib
       Linux  : .so        .a
       动态库就是进程运行过程中动态链接的函数库，dll大多作为应用扩展程序存在
       
下面介绍如何再Lniux仿真终端用命令行逐步进行上述四个编译.c程序的过程
（提一句：Linux虽然没有后缀，但是有文件类型，所用vim写了c源程序wq时，一定要加.c作为文件名后缀，方便系统识别你是c文件）
前提：装好了gcc，且配置好PATH路径（有多种方法，主要时为了打命令时少打字）
1编译
